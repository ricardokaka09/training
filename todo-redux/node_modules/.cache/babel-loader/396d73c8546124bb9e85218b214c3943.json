{"ast":null,"code":"var _jsxFileName = \"E:\\\\JS\\\\hocJS\\\\training\\\\todo-redux\\\\src\\\\task\\\\TodoItem.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport store from \"../store\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction TodoItem({\n  todoReducer: {\n    process,\n    finished\n  }\n}) {\n  _s();\n\n  const [done, setDone] = useState(checked);\n  useEffect(() => {\n    console.log(done);\n  }, []);\n\n  const onChange = () => {\n    // set\n    // setDone(!done);\n    console.log({\n      status: done,\n      task\n    });\n\n    if (done) {\n      store.dispatch({\n        type: \"add__again\",\n        payload: {\n          process: task,\n          mess: \"update success\"\n        }\n      });\n    } else {\n      store.dispatch({\n        type: \"remove\",\n        payload: {\n          finished: task,\n          mess: \"finished working\"\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [process === null || process === void 0 ? void 0 : process.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: false,\n        className: \"list__checkbox\",\n        onChange: () => {\n          setDone(!done);\n          onChange();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: item.task\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)), finished === null || finished === void 0 ? void 0 : finished.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: false,\n        className: \"list__checkbox\",\n        onChange: () => {\n          setDone(!done);\n          onChange();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: item.task\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true);\n}\n\n_s(TodoItem, \"ToIgRYe8gu2TRLpHIdiQPmug51k=\");\n\n_c = TodoItem;\nTodoItem.propTypes = {\n  todoReducer: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state = () => ({\n  todoReducer: status.todoReducer\n});\n\nexport default connect(mapStateToProps, null)(TodoItem); // export default TodoItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoItem\");","map":{"version":3,"sources":["E:/JS/hocJS/training/todo-redux/src/task/TodoItem.js"],"names":["React","useEffect","useState","connect","store","PropTypes","TodoItem","todoReducer","process","finished","done","setDone","checked","console","log","onChange","status","task","dispatch","type","payload","mess","map","item","propTypes","object","isRequired","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;;AAEA,SAASC,QAAT,CAAkB;AAAEC,EAAAA,WAAW,EAAE;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX;AAAf,CAAlB,EAA0D;AAAA;;AACxD,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAACU,OAAD,CAAhC;AACAX,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACD,GAFQ,EAEN,EAFM,CAAT;;AAGA,QAAMK,QAAQ,GAAG,MAAM;AACrB;AACA;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY;AAAEE,MAAAA,MAAM,EAAEN,IAAV;AAAgBO,MAAAA;AAAhB,KAAZ;;AACA,QAAIP,IAAJ,EAAU;AACRN,MAAAA,KAAK,CAACc,QAAN,CAAe;AACbC,QAAAA,IAAI,EAAE,YADO;AAEbC,QAAAA,OAAO,EAAE;AAAEZ,UAAAA,OAAO,EAAES,IAAX;AAAiBI,UAAAA,IAAI,EAAE;AAAvB;AAFI,OAAf;AAID,KALD,MAKO;AACLjB,MAAAA,KAAK,CAACc,QAAN,CAAe;AACbC,QAAAA,IAAI,EAAE,QADO;AAEbC,QAAAA,OAAO,EAAE;AAAEX,UAAAA,QAAQ,EAAEQ,IAAZ;AAAkBI,UAAAA,IAAI,EAAE;AAAxB;AAFI,OAAf;AAID;AACF,GAfD;;AAgBA,sBACE;AAAA,eACGb,OADH,aACGA,OADH,uBACGA,OAAO,CAAEc,GAAT,CAAcC,IAAD,iBACZ;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,OAAO,EAAE,KAFX;AAGE,QAAA,SAAS,EAAC,gBAHZ;AAIE,QAAA,QAAQ,EAAE,MAAM;AACdZ,UAAAA,OAAO,CAAC,CAACD,IAAF,CAAP;AACAK,UAAAA,QAAQ;AACT;AAPH;AAAA;AAAA;AAAA;AAAA,cADF,eAUE;AAAA,kBAAIQ,IAAI,CAACN;AAAT;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,CADH,EAeGR,QAfH,aAeGA,QAfH,uBAeGA,QAAQ,CAAEa,GAAV,CAAeC,IAAD,iBACb;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,OAAO,EAAE,KAFX;AAGE,QAAA,SAAS,EAAC,gBAHZ;AAIE,QAAA,QAAQ,EAAE,MAAM;AACdZ,UAAAA,OAAO,CAAC,CAACD,IAAF,CAAP;AACAK,UAAAA,QAAQ;AACT;AAPH;AAAA;AAAA;AAAA;AAAA,cADF,eAUE;AAAA,kBAAIQ,IAAI,CAACN;AAAT;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,CAfH;AAAA,kBADF;AAgCD;;GArDQX,Q;;KAAAA,Q;AAsDTA,QAAQ,CAACkB,SAAT,GAAqB;AACnBjB,EAAAA,WAAW,EAAEF,SAAS,CAACoB,MAAV,CAAiBC;AADX,CAArB;;AAGA,MAAMC,eAAe,GAAIC,KAAK,GAAG,OAAO;AACtCrB,EAAAA,WAAW,EAAES,MAAM,CAACT;AADkB,CAAP,CAAjC;;AAIA,eAAeJ,OAAO,CAACwB,eAAD,EAAkB,IAAlB,CAAP,CAA+BrB,QAA/B,CAAf,C,CACA","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport store from \"../store\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction TodoItem({ todoReducer: { process, finished } }) {\r\n  const [done, setDone] = useState(checked);\r\n  useEffect(() => {\r\n    console.log(done);\r\n  }, []);\r\n  const onChange = () => {\r\n    // set\r\n    // setDone(!done);\r\n    console.log({ status: done, task });\r\n    if (done) {\r\n      store.dispatch({\r\n        type: \"add__again\",\r\n        payload: { process: task, mess: \"update success\" },\r\n      });\r\n    } else {\r\n      store.dispatch({\r\n        type: \"remove\",\r\n        payload: { finished: task, mess: \"finished working\" },\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      {process?.map((item) => (\r\n        <li>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={false}\r\n            className=\"list__checkbox\"\r\n            onChange={() => {\r\n              setDone(!done);\r\n              onChange();\r\n            }}\r\n          />\r\n          <p>{item.task}</p>\r\n        </li>\r\n      ))}\r\n      {finished?.map((item) => (\r\n        <li>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={false}\r\n            className=\"list__checkbox\"\r\n            onChange={() => {\r\n              setDone(!done);\r\n              onChange();\r\n            }}\r\n          />\r\n          <p>{item.task}</p>\r\n        </li>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\nTodoItem.propTypes = {\r\n  todoReducer: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state = () => ({\r\n  todoReducer: status.todoReducer,\r\n}));\r\n\r\nexport default connect(mapStateToProps, null)(TodoItem);\r\n// export default TodoItem;\r\n"]},"metadata":{},"sourceType":"module"}