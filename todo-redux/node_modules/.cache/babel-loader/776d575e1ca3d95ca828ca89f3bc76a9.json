{"ast":null,"code":"var _jsxFileName = \"E:\\\\JS\\\\hocJS\\\\training\\\\todo-redux\\\\src\\\\task\\\\TodoItem.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport store from \"../store\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoItem({\n  task,\n  checked\n}) {\n  _s();\n\n  const [done, setDone] = useState(checked);\n  useEffect(() => {\n    console.log(done);\n  }, []);\n\n  const onChange = () => {\n    // set\n    // setDone(!done);\n    console.log({\n      status: done,\n      task\n    });\n\n    if (done) {\n      store.dispatch({\n        type: \"add__again\",\n        payload: {\n          process: task,\n          mess: \"update success\"\n        }\n      });\n    } else {\n      store.dispatch({\n        type: \"remove\",\n        payload: {\n          finished: task,\n          mess: \"finished working\"\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      checked: done,\n      className: \"list__checkbox\",\n      onChange: () => {\n        setDone(!done);\n        onChange();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: task\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TodoItem, \"ToIgRYe8gu2TRLpHIdiQPmug51k=\");\n\n_c = TodoItem;\nexport default TodoItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoItem\");","map":{"version":3,"sources":["E:/JS/hocJS/training/todo-redux/src/task/TodoItem.js"],"names":["React","useEffect","useState","store","TodoItem","task","checked","done","setDone","console","log","onChange","status","dispatch","type","payload","process","mess","finished"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,UAAlB;;;AAEA,SAASC,QAAT,CAAkB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAlB,EAAqC;AAAA;;AACnC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAACI,OAAD,CAAhC;AACAL,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACD,GAFQ,EAEN,EAFM,CAAT;;AAGA,QAAMI,QAAQ,GAAG,MAAM;AACrB;AACA;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY;AAAEE,MAAAA,MAAM,EAAEL,IAAV;AAAgBF,MAAAA;AAAhB,KAAZ;;AACA,QAAIE,IAAJ,EAAU;AACRJ,MAAAA,KAAK,CAACU,QAAN,CAAe;AACbC,QAAAA,IAAI,EAAE,YADO;AAEbC,QAAAA,OAAO,EAAE;AAAEC,UAAAA,OAAO,EAAEX,IAAX;AAAiBY,UAAAA,IAAI,EAAE;AAAvB;AAFI,OAAf;AAID,KALD,MAKO;AACLd,MAAAA,KAAK,CAACU,QAAN,CAAe;AACbC,QAAAA,IAAI,EAAE,QADO;AAEbC,QAAAA,OAAO,EAAE;AAAEG,UAAAA,QAAQ,EAAEb,IAAZ;AAAkBY,UAAAA,IAAI,EAAE;AAAxB;AAFI,OAAf;AAID;AACF,GAfD;;AAgBA,sBACE;AAAA,4BACE;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,OAAO,EAAEV,IAFX;AAGE,MAAA,SAAS,EAAC,gBAHZ;AAIE,MAAA,QAAQ,EAAE,MAAM;AACdC,QAAAA,OAAO,CAAC,CAACD,IAAF,CAAP;AACAI,QAAAA,QAAQ;AACT;AAPH;AAAA;AAAA;AAAA;AAAA,YADF,eAUE;AAAA,gBAAIN;AAAJ;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GAnCQD,Q;;KAAAA,Q;AAqCT,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport store from \"../store\";\r\n\r\nfunction TodoItem({ task, checked }) {\r\n  const [done, setDone] = useState(checked);\r\n  useEffect(() => {\r\n    console.log(done);\r\n  }, []);\r\n  const onChange = () => {\r\n    // set\r\n    // setDone(!done);\r\n    console.log({ status: done, task });\r\n    if (done) {\r\n      store.dispatch({\r\n        type: \"add__again\",\r\n        payload: { process: task, mess: \"update success\" },\r\n      });\r\n    } else {\r\n      store.dispatch({\r\n        type: \"remove\",\r\n        payload: { finished: task, mess: \"finished working\" },\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <li>\r\n      <input\r\n        type=\"checkbox\"\r\n        checked={done}\r\n        className=\"list__checkbox\"\r\n        onChange={() => {\r\n          setDone(!done);\r\n          onChange();\r\n        }}\r\n      />\r\n      <p>{task}</p>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default TodoItem;\r\n"]},"metadata":{},"sourceType":"module"}