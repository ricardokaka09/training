{"ast":null,"code":"var _jsxFileName = \"E:\\\\JS\\\\hocJS\\\\training\\\\todo-redux\\\\src\\\\task\\\\TodoItem.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport store from \"../store\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction TodoItem({\n  todoReducer: {\n    process,\n    finished\n  }\n}) {\n  _s();\n\n  // const [done, setDone] = useState();\n  useEffect(() => {\n    console.log(done);\n  }, []);\n\n  const doneWork = () => {\n    store.dispatch({\n      type: \"remove\",\n      payload: {\n        finished: task,\n        mess: \"finished working\"\n      }\n    });\n  };\n\n  const back = () => {\n    store.dispatch({\n      type: \"add__again\",\n      payload: {\n        process: task,\n        mess: \"update success\"\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [process === null || process === void 0 ? void 0 : process.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: false,\n        className: \"list__checkbox\",\n        onChange: () => {\n          doneWork();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: item.task\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)), finished === null || finished === void 0 ? void 0 : finished.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: true,\n        className: \"list__checkbox\",\n        onChange: () => {\n          back();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: item.task\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true);\n}\n\n_s(TodoItem, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = TodoItem;\nTodoItem.propTypes = {\n  todoReducer: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state = () => ({\n  todoReducer: status.todoReducer\n});\n\nexport default connect(mapStateToProps, null)(TodoItem); // export default TodoItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoItem\");","map":{"version":3,"sources":["E:/JS/hocJS/training/todo-redux/src/task/TodoItem.js"],"names":["React","useEffect","useState","connect","store","PropTypes","TodoItem","todoReducer","process","finished","console","log","done","doneWork","dispatch","type","payload","task","mess","back","map","item","propTypes","object","isRequired","mapStateToProps","state","status"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;;AAEA,SAASC,QAAT,CAAkB;AAAEC,EAAAA,WAAW,EAAE;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX;AAAf,CAAlB,EAA0D;AAAA;;AACxD;AACAR,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ;AACD,GAFQ,EAEN,EAFM,CAAT;;AAGA,QAAMC,QAAQ,GAAG,MAAM;AACrBT,IAAAA,KAAK,CAACU,QAAN,CAAe;AACbC,MAAAA,IAAI,EAAE,QADO;AAEbC,MAAAA,OAAO,EAAE;AAAEP,QAAAA,QAAQ,EAAEQ,IAAZ;AAAkBC,QAAAA,IAAI,EAAE;AAAxB;AAFI,KAAf;AAID,GALD;;AAMA,QAAMC,IAAI,GAAG,MAAM;AACjBf,IAAAA,KAAK,CAACU,QAAN,CAAe;AACbC,MAAAA,IAAI,EAAE,YADO;AAEbC,MAAAA,OAAO,EAAE;AAAER,QAAAA,OAAO,EAAES,IAAX;AAAiBC,QAAAA,IAAI,EAAE;AAAvB;AAFI,KAAf;AAID,GALD;;AAOA,sBACE;AAAA,eACGV,OADH,aACGA,OADH,uBACGA,OAAO,CAAEY,GAAT,CAAcC,IAAD,iBACZ;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,OAAO,EAAE,KAFX;AAGE,QAAA,SAAS,EAAC,gBAHZ;AAIE,QAAA,QAAQ,EAAE,MAAM;AACdR,UAAAA,QAAQ;AACT;AANH;AAAA;AAAA;AAAA;AAAA,cADF,eASE;AAAA,kBAAIQ,IAAI,CAACJ;AAAT;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,CADH,EAcGR,QAdH,aAcGA,QAdH,uBAcGA,QAAQ,CAAEW,GAAV,CAAeC,IAAD,iBACb;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,OAAO,EAAE,IAFX;AAGE,QAAA,SAAS,EAAC,gBAHZ;AAIE,QAAA,QAAQ,EAAE,MAAM;AACdF,UAAAA,IAAI;AACL;AANH;AAAA;AAAA;AAAA;AAAA,cADF,eASE;AAAA,kBAAIE,IAAI,CAACJ;AAAT;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,CAdH;AAAA,kBADF;AA8BD;;GAhDQX,Q;;KAAAA,Q;AAiDTA,QAAQ,CAACgB,SAAT,GAAqB;AACnBf,EAAAA,WAAW,EAAEF,SAAS,CAACkB,MAAV,CAAiBC;AADX,CAArB;;AAGA,MAAMC,eAAe,GAAIC,KAAK,GAAG,OAAO;AACtCnB,EAAAA,WAAW,EAAEoB,MAAM,CAACpB;AADkB,CAAP,CAAjC;;AAIA,eAAeJ,OAAO,CAACsB,eAAD,EAAkB,IAAlB,CAAP,CAA+BnB,QAA/B,CAAf,C,CACA","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport store from \"../store\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction TodoItem({ todoReducer: { process, finished } }) {\r\n  // const [done, setDone] = useState();\r\n  useEffect(() => {\r\n    console.log(done);\r\n  }, []);\r\n  const doneWork = () => {\r\n    store.dispatch({\r\n      type: \"remove\",\r\n      payload: { finished: task, mess: \"finished working\" },\r\n    });\r\n  };\r\n  const back = () => {\r\n    store.dispatch({\r\n      type: \"add__again\",\r\n      payload: { process: task, mess: \"update success\" },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {process?.map((item) => (\r\n        <li>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={false}\r\n            className=\"list__checkbox\"\r\n            onChange={() => {\r\n              doneWork();\r\n            }}\r\n          />\r\n          <p>{item.task}</p>\r\n        </li>\r\n      ))}\r\n      {finished?.map((item) => (\r\n        <li>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={true}\r\n            className=\"list__checkbox\"\r\n            onChange={() => {\r\n              back();\r\n            }}\r\n          />\r\n          <p>{item.task}</p>\r\n        </li>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\nTodoItem.propTypes = {\r\n  todoReducer: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state = () => ({\r\n  todoReducer: status.todoReducer,\r\n}));\r\n\r\nexport default connect(mapStateToProps, null)(TodoItem);\r\n// export default TodoItem;\r\n"]},"metadata":{},"sourceType":"module"}